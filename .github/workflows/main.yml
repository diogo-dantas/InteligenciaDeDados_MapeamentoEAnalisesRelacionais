name: Python Database CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-merge:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: smart_data_db
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install Graphviz
      run: sudo apt-get install -y graphviz graphviz-dev
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install pandas python-dotenv psycopg2-binary graphviz jupyter
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "DB_HOST=localhost" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_NAME=test_db" >> .env
        echo "DB_USER=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
    
    - name: Run tests
      run: |
        pytest tests/ --cov=./ --cov-report=xml
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: smart_data_db
        DB_USER: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
    
    - name: Auto merge to main
      if: success()
      run: |
        git fetch origin main:main
        git checkout main
        git merge ${{ github.ref }} --no-ff -m "Auto-merge branch ${{ github.ref }}"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
